-- ‚úÖ **Function Forward Declarations**
local moveTo, savePosition, returnToLastPosition, restock, placeBlock, buildSchematic

-- ‚úÖ **Position Tracking**
local pos = {x = 0, y = 0, z = 0, dir = 0} -- 0 = +Z, 1 = +X, 2 = -Z, 3 = -X
local lastPos = {x = 0, y = 0, z = 0, dir = 0} -- Last saved position before leaving for restock

-- ‚úÖ **Material Chest Locations**
local materialChests = {
    ["minecraft:white_wool"] = {x = -1, y = 0, z = -4, dir = 3},
    ["minecraft:clay"] = {x = -1, y = 0, z = 0, dir = 3},
    ["minecraft:dirt"] = {x = -1, y = 0, z = -1, dir = 3},
    ["minecraft:grass_block"] = {x = -1, y = 0, z = -2, dir = 3},
    ["minecraft:stone"] = {x = -1, y = 0, z = -3, dir = 3}
}

-- ‚úÖ **Block Data for Schematic**
local blocks = {
    {x=0, y=0, z=0, 'white_wool'},
    {x=1, y=0, z=0, 'clay'},
    {x=2, y=0, z=0, 'dirt'},
    {x=3, y=0, z=0, 'grass_block'},
    {x=4, y=0, z=0, 'stone'},
    {x=5, y=0, z=0, 'white_wool'},
    {x=6, y=0, z=0, 'clay'},
    {x=7, y=0, z=0, 'dirt'}
}

-- ‚úÖ **Block ID Mappings**
local blockMappings = {
    white_wool = "minecraft:white_wool",
    clay = "minecraft:clay",
    dirt = "minecraft:dirt",
    grass_block = "minecraft:grass_block",
    stone = "minecraft:stone"
}

-- ‚úÖ **Convert Block Names to Minecraft IDs**
local function convertBlockData(blocks)
    local converted = {}
    for _, block in ipairs(blocks) do
        local blockName = block[1] 
        local minecraftID = blockMappings[blockName]

        if minecraftID then
            table.insert(converted, {
                x = block.x,
                y = block.y,
                z = block.z,
                block = minecraftID
            })
        else
            print("‚ö†Ô∏è WARNING: Unknown block '" .. tostring(blockName) .. "' at (" .. block.x .. ", " .. block.y .. ", " .. block.z .. ")")
        end
    end
    return converted
end

blocks = convertBlockData(blocks)

-- ‚úÖ **Movement Functions**
local function turnLeft()
    turtle.turnLeft()
    pos.dir = (pos.dir - 1) % 4
end

local function turnRight()
    turtle.turnRight()
    pos.dir = (pos.dir + 1) % 4
end

local function moveForward()
    if turtle.forward() then
        if pos.dir == 0 then pos.z = pos.z + 1
        elseif pos.dir == 1 then pos.x = pos.x + 1
        elseif pos.dir == 2 then pos.z = pos.z - 1
        elseif pos.dir == 3 then pos.x = pos.x - 1
        end
        return true
    end
    return false
end

moveTo = function(target)
    while pos.x ~= target.x do
        if pos.x < target.x then while pos.dir ~= 1 do turnRight() end
        else while pos.dir ~= 3 do turnRight() end
        end
        moveForward()
    end
    while pos.z ~= target.z do
        if pos.z < target.z then while pos.dir ~= 0 do turnRight() end
        else while pos.dir ~= 2 do turnRight() end
        end
        moveForward()
    end
end

-- ‚úÖ **Save and Return to Position**
savePosition = function()
    lastPos = {x = pos.x, y = pos.y, z = pos.z, dir = pos.dir}
end

returnToLastPosition = function()
    moveTo(lastPos)
    while pos.dir ~= lastPos.dir do turnRight() end
end

-- ‚úÖ **Restock Function (Handles Multiple Chests & Materials)**
restock = function(block)
    local chestPos = materialChests[block]
    if not chestPos then
        print("‚ùå ERROR: No chest found for " .. block)
        return false
    end

    print("üîÑ Moving to Restock " .. block .. " at Chest: X=" .. chestPos.x .. " Z=" .. chestPos.z)
    
    savePosition()
    moveTo(chestPos)
    while pos.dir ~= chestPos.dir do turnLeft() end

    local success = false
    for i = 1, 16 do
        if not turtle.getItemDetail(i) then
            turtle.select(i)
            if turtle.suck(64) then
                local item = turtle.getItemDetail(i)
                if item and item.name == "minecraft:"..block then
                    print("‚úÖ Successfully Restocked: " .. block)
                    success = true
                    break
                else
                    turtle.drop()
                end
            end
        end
    end

    if not success then
        print("‚ùå Out of stock: " .. block)
    end

    returnToLastPosition()
    return success
end

-- ‚úÖ **Block Placement Function**
placeBlock = function(block)
    for i = 1, 16 do
        local item = turtle.getItemDetail(i)
        if item and item.name == "minecraft:"..block then
            turtle.select(i)
            if turtle.placeDown() then
                print("‚úÖ Placed " .. block)
                return true
            else
                print("‚ùå Placement failed, restocking " .. block)
                if restock(block) then
                    return placeBlock(block)
                else
                    print("‚ùå Out of " .. block .. ", skipping.")
                    return false
                end
            end
        end
    end

    print("‚ùå No " .. block .. " found in inventory. Restocking...")
    if restock(block) then
        return placeBlock(block)
    else
        print("‚ùå Out of " .. block .. ", skipping.")
        return false
    end
end

-- ‚úÖ **Build Process**
buildSchematic = function()
    for _, blockData in ipairs(blocks) do
        moveTo(blockData)
        while not placeBlock(blockData.block) do
            print("üîÑ Retrying " .. blockData.block .. " after restock")
        end
    end
    print("‚úÖ Build completed successfully!")
end

-- ‚úÖ **Start the Build**
buildSchematic()
